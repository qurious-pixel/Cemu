name: Build Cemu

on:
  push:

env:
  VCPKG_ROOT: "${{github.workspace}}/dependencies/vcpkg"
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  build-ubuntu:
    runs-on: ubuntu-20.04
    env:
      CACHEDIR: "${{github.workspace}}/dependencies/linux_submodules"
      CC: clang-12
      CXX: clang++-12
    steps:
    - name: "Checkout repo"
      uses: actions/checkout@v3
      with:
        submodules: "recursive"
        fetch-depth: 0

    - name: cache
      uses: actions/cache@v3
      with:
        path: ${{ env.CACHEDIR }}
        key: build-${{ hashFiles('dist/linux/dependencies.sh') }}
        restore-keys: build-${{ hashFiles('dist/linux/dependencies.sh') }}

    - name: Setup release mode parameters (for deploy)
      run: |
        echo "BUILD_MODE=release" >> $GITHUB_ENV
        echo "BUILD_FLAGS=" >> $GITHUB_ENV
        echo "Build mode is release"

    - name: Setup version for experimental
      if: ${{ inputs.experimentalversion != '' }}
      run: |
        echo "[INFO] Experimental version ${{ inputs.experimentalversion }}"
        echo "BUILD_FLAGS=${{ env.BUILD_FLAGS }} -DEXPERIMENTAL_VERSION=${{ inputs.experimentalversion }}" >> $GITHUB_ENV

    - name: "Install system dependencies"
      run: | 
        chmod +x dist/linux/dependencies.sh
        dist/linux/dependencies.sh
              
    - name: "cmake"
      run: |
        cmake -S . -B build ${{ env.BUILD_FLAGS }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_MODE }} \
        -DPORTABLE=OFF -DENABLE_VCPKG=OFF -DCMAKE_CXX_FLAGS="-ldl -Wno-unused-command-line-argument" \
        -DCMAKE_C_COMPILER=/usr/bin/clang-12 -DCMAKE_CXX_COMPILER=/usr/bin/clang++-12 \
        -G Ninja -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja
        
    #- name: "Build Cemu"
    #  run: |
    #    cmake --build build
        
    #- name: Prepare artifact
    #  run: mv bin/Cemu_release bin/Cemu
              
    #- name: Upload artifact
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: cemu-bin-linux-x64
    #    path: ./bin/Cemu

    #- name: "Build AppImage"
    #  run: |
    #    dist/linux/appimage.sh

    #- name: Upload AppImage artifact
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: cemu-appimage-x64
    #    path: artifacts

