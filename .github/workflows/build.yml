name: Build Cemu

on:
  push:

env:
  VCPKG_ROOT: "${{github.workspace}}/dependencies/vcpkg"
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  build-ubuntu:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Upstream Repo
      uses: actions/checkout@v3
      with:
        repository: SSimco/Cemu # cemu-project/Cemu 
        ref: wayland # main # 
        submodules: recursive
    - name: Checkout AppImage Repo
      uses: actions/checkout@v3
      with:
          clean: false
          path: ci
    - name: Setup release mode parameters (for deploy)
      #if: ${{ inputs.deploymode == 'release' }}
      run: |
        echo "BUILD_MODE=release" >> $GITHUB_ENV
        echo "BUILD_FLAGS=" >> $GITHUB_ENV
        echo "Build mode is release"
        
    - name: "Install system dependencies"
      run: |
        sudo apt update -qq
        sudo apt install -y clang-12 cmake freeglut3-dev libgcrypt20-dev libgtk-3-dev libpulse-dev libsecret-1-dev libsystemd-dev nasm ninja-build
    - name: Setup glib-2.0
      #if: ${{ matrix.build == '20.04' }}
      run: |
        sudo python3 -m pip install meson
        git clone https://gitlab.gnome.org/GNOME/glib.git
        cd glib
        sudo meson --prefix /usr _build
        sudo ninja -C _build
        sudo ninja -C _build install
        glib-compile-schemas /usr/share/glib-2.0/schemas
    - name: "Bootstrap vcpkg"
      run: |
        bash ./dependencies/vcpkg/bootstrap-vcpkg.sh
    - name: 'Setup NuGet Credentials for vcpkg'
      shell: 'bash'
      run: |
        mono `./dependencies/vcpkg/vcpkg fetch nuget | tail -n 1` \
        sources add \
        -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
        -storepasswordincleartext \
        -name "GitHub" \
        -username "${{ github.repository_owner }}" \
        -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./dependencies/vcpkg/vcpkg fetch nuget | tail -n 1` \
        setapikey "${{ secrets.GITHUB_TOKEN }}" \
        -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
        
    - name: "cmake"
      run: |
        cmake -S . -B build ${{ env.BUILD_FLAGS }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_MODE }} -DPORTABLE=OFF -DCMAKE_C_COMPILER=/usr/bin/clang-12 -DCMAKE_CXX_COMPILER=/usr/bin/clang++-12 -G Ninja -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja
        
    - name: "Build Cemu"
      run: |
        cmake --build build
        
    - name: Prepare artifact
      run: mv bin/Cemu_* bin/Cemu
              
    - name: "Build AppImage"
      run: |
        cp ci/scripts/appimage.sh dist/linux/
        chmod +x dist/linux/appimage.sh
        dist/linux/appimage.sh

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: cemu-appimage-wayland
        path: artifacts
