name: Build Cemu

on:
  push:

env:
  VCPKG_ROOT: "${{github.workspace}}/dependencies/vcpkg"
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  build-ubuntu:
    runs-on: ubuntu-20.04
    env:
      CACHEDIR: "${{github.workspace}}/dependencies/linux_submodules"
      CC: clang-17
      CXX: clang++-17
      LLVM: ''
      VCPKG: OFF
    steps:
    - name: "Checkout repo"
      uses: actions/checkout@v3
      with:
        submodules: "recursive"
        fetch-depth: 0

    - name: cache
      uses: actions/cache@v3
      with:
        path: ${{ env.CACHEDIR }}
        key: build-${{ hashFiles('dist/linux/dependencies.sh') }}
        restore-keys: build-${{ hashFiles('dist/linux/dependencies.sh') }}

    - name: "Fetch full history for vcpkg submodule"
      run: |
        cd dependencies/vcpkg
        git fetch --unshallow
        git pull --all
      if: ${{ env.VCPKG == 'ON' }}
      
    - name: Setup release mode parameters (for deploy)
      run: |
        echo "BUILD_MODE=release" >> $GITHUB_ENV
        echo "BUILD_FLAGS=" >> $GITHUB_ENV
        echo "Build mode is release"

    - name: Setup version for experimental
      if: ${{ inputs.experimentalversion != '' }}
      run: |
        echo "[INFO] Experimental version ${{ inputs.experimentalversion }}"
        echo "BUILD_FLAGS=${{ env.BUILD_FLAGS }} -DEXPERIMENTAL_VERSION=${{ inputs.experimentalversion }}" >> $GITHUB_ENV

    - name: "Install system dependencies"
      run: | 
        chmod +x dist/linux/dependencies.sh
        dist/linux/dependencies.sh

    - name: "Bootstrap vcpkg"
      run: |
        bash ./dependencies/vcpkg/bootstrap-vcpkg.sh
      if: ${{ env.VCPKG == 'ON' }}
      
    - name: 'Setup NuGet Credentials for vcpkg'
      shell: 'bash'
      run: |
        mono `./dependencies/vcpkg/vcpkg fetch nuget | tail -n 1` \
        sources add \
        -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
        -storepasswordincleartext \
        -name "GitHub" \
        -username "${{ github.repository_owner }}" \
        -password "${{ secrets.GITHUB_TOKEN }}"
        mono `./dependencies/vcpkg/vcpkg fetch nuget | tail -n 1` \
        setapikey "${{ secrets.GITHUB_TOKEN }}" \
        -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      if: ${{ env.VCPKG == 'ON' }}
              
    - name: "cmake"
      run: |
        cmake -S . -B build ${{ env.BUILD_FLAGS }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_MODE }} \
        -DPORTABLE=OFF -DENABLE_VCPKG=${{ env.VCPKG }} -DCMAKE_CXX_FLAGS="-ldl -Wno-unused-command-line-argument" \
        -DCMAKE_C_COMPILER=/usr/bin/${{ env.CC }} -DCMAKE_CXX_COMPILER=/usr/bin/${{ env.CXX }} \
        -G Ninja -DCMAKE_MAKE_PROGRAM=/usr/bin/ninja
        
    - name: "Build Cemu"
      run: |
        cmake --build build
        
    - name: Prepare artifact
      run: mv bin/Cemu_release bin/Cemu
              
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: cemu-bin-linux-x64
        path: ./bin/Cemu
        
    - name: "Build AppImage"
      run: |
        export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
        export DEPLOY_GTK_VERSION=3
        dist/linux/appimage.sh

    - name: Upload AppImage artifact
      uses: actions/upload-artifact@v3
      with:
        name: cemu-appimage-x64
        path: artifacts

